#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Polar API
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json

# –í–∞—à–∏ API –∫–ª—é—á–∏
CLIENT_ID = "d7b638fa-de73-45e7-8011-7adec4ce8092"
CLIENT_SECRET = "38f243a0-67a5-4557-aee8-886ef7d5ae55"

def test_api_connection():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Polar API"""
    print("üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Polar API")
    print("=" * 40)
    
    # –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print("\n1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    auth_url = f"https://flow.polar.com/oauth2/authorization?response_type=code&client_id={CLIENT_ID}&redirect_uri=http://localhost:8080/callback&scope=accesslink.read_all"
    print(f"‚úÖ URL —Å–æ–∑–¥–∞–Ω: {auth_url}")
    
    # –®–∞–≥ 2: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Polar Flow")
    print("3. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é")
    print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ URL (–ø–∞—Ä–∞–º–µ—Ç—Ä 'code')")
    print("5. –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –Ω–∏–∂–µ")
    
    # –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n2. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:")
    auth_code = input("–ö–æ–¥: ").strip()
    
    if not auth_code:
        print("‚ùå –ö–æ–¥ –Ω–µ –≤–≤–µ–¥–µ–Ω. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return
    
    # –®–∞–≥ 4: –û–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
    print("\n3. –û–±–º–µ–Ω –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞...")
    token_url = "https://polar.com/oauth2/token"
    token_data = {
        'grant_type': 'authorization_code',
        'client_id': CLIENT_ID,
        'client_secret': CLIENT_SECRET,
        'code': auth_code,
        'redirect_uri': 'http://localhost:8080/callback'
    }
    
    try:
        response = requests.post(token_url, data=token_data)
        response.raise_for_status()
        token_info = response.json()
        access_token = token_info.get('access_token')
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {access_token[:20]}...")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        return
    
    # –®–∞–≥ 5: –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API...")
    api_url = "https://www.polaraccesslink.com/v3/users/me"
    headers = {"Authorization": f"Bearer {access_token}"}
    
    try:
        response = requests.get(api_url, headers=headers)
        response.raise_for_status()
        user_info = response.json()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_info.get('id')}")
        print(f"   –ò–º—è: {user_info.get('first_name')} {user_info.get('last_name')}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return
    
    # –®–∞–≥ 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    print("\n5. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...")
    exercises_url = "https://www.polaraccesslink.com/v3/users/me/exercise-transactions"
    
    try:
        response = requests.get(exercises_url, headers=headers)
        response.raise_for_status()
        exercises = response.json()
        exercise_count = len(exercises.get('exercises', []))
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {exercise_count}")
        
        if exercise_count > 0:
            print("\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:")
            for i, exercise in enumerate(exercises['exercises'][:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   {i+1}. ID: {exercise['id']}")
                print(f"      –í—Ä–µ–º—è: {exercise.get('start_time', 'N/A')}")
                print(f"      –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {exercise.get('duration', 'N/A')} —Å–µ–∫")
        else:
            print("üí° –ù–µ—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å Verity Sense –≤ Polar Beat.")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {e}")
        return
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å Verity Sense –≤ Polar Beat")
    print("2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å Polar Flow")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HRV –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    test_api_connection()
