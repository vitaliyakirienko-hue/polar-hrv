# bot/handlers.py
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, BufferedInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config.settings import settings
from analytics.hrv_calculator import HRVCalculator
from analytics.visualizer import HRVVisualizer
import json
import logging
from datetime import datetime, timedelta

logger = logging.getLogger(__name__)
router = Router()


# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class UserStates(StatesGroup):
    waiting_for_question = State()


# ==================== –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ====================

def get_main_keyboard() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–æ—Ç–∞"""
    kb = [
        [
            KeyboardButton(text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å Polar H10")
        ],
        [
            KeyboardButton(text="üìä –ú–æ–∏ –∑–∞–º–µ—Ä—ã"),
            KeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        ],
        [
            KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
            KeyboardButton(text="‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
        ]
    ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)


def get_period_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    kb = [
        [
            InlineKeyboardButton(text="–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="period_7"),
            InlineKeyboardButton(text="–ó–∞ –º–µ—Å—è—Ü", callback_data="period_30")
        ],
        [
            InlineKeyboardButton(text="–ó–∞ 3 –º–µ—Å—è—Ü–∞", callback_data="period_90"),
            InlineKeyboardButton(text="–ó–∞ –≥–æ–¥", callback_data="period_365")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


def get_session_keyboard(session_id: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–µ—Å—Å–∏–∏"""
    kb = [
        [
            InlineKeyboardButton(
                text="üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç", 
                callback_data=f"detail_{session_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìà –°—Ä–∞–≤–Ω–∏—Ç—å", 
                callback_data=f"compare_{session_id}"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


# ==================== –ö–æ–º–∞–Ω–¥—ã ====================

@router.message(Command("start"))
async def cmd_start(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    db = getattr(message.bot, 'data', {}).get('db')
    
    try:
        # –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await db.get_or_create_user(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name
        )
        
        welcome_text = """
ü´Ä <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Polar HRV Monitor!</b>

–°–∏—Å—Ç–µ–º–∞ –¥–ª—è –Ω–µ–π—Ä–æ–∞—Å—Å–µ—Å—Å–º–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–¥–µ—á–Ω–æ–≥–æ —Ä–∏—Ç–º–∞.

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Polar H10 —á–µ—Ä–µ–∑ Bluetooth
‚Ä¢ –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ 8 —á–∞—Å–æ–≤
‚Ä¢ –†–∞—Å—á–µ—Ç –≤—Å–µ—Ö HRV –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
‚Ä¢ –û—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∏ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–º–µ—Ä–æ–≤ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

<b>–î–ª—è –Ω–∞—á–∞–ª–∞:</b>
1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Polar H10 –∑–∞—Ä—è–∂–µ–Ω
2. –ù–∞–∂–º–∏—Ç–µ "üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å Polar"
3. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ Bluetooth
4. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Chrome –∏–ª–∏ Edge –±—Ä–∞—É–∑–µ—Ä.
        """
        
        await message.answer(
            welcome_text,
            reply_markup=get_main_keyboard(),
            parse_mode="HTML"
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(Command("help"))
@router.message(F.text == "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
async def cmd_help(message: Message):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ HRV –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º"""
    help_text = """
üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ HRV –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º</b>

<b>Readiness (–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å) 0-100%</b>
‚Ä¢ 80-100% - –≥–æ—Ç–æ–≤ –∫ —Å–ª–æ–∂–Ω—ã–º –∑–∞–¥–∞—á–∞–º –∏ –ª–∏–¥–µ—Ä—Å—Ç–≤—É
‚Ä¢ 65-79% - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏
‚Ä¢ 50-64% - —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, –∏–∑–±–µ–≥–∞—Ç—å —Å—Ç—Ä–µ—Å—Å–∞
‚Ä¢ <50% - –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞—á–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–¥—ã—Ö

<b>RMSSD (–º—Å)</b> - –°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å
‚Ä¢ >35 –º—Å - –æ—Ç–ª–∏—á–Ω–∞—è
‚Ä¢ 19-35 –º—Å - –Ω–æ—Ä–º–∞
‚Ä¢ <19 –º—Å - —Å–Ω–∏–∂–µ–Ω–Ω–∞—è

<b>SDNN (–º—Å)</b> - –û–±—â–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è
‚Ä¢ >50 –º—Å - —Ö–æ—Ä–æ—à–∞—è
‚Ä¢ 20-50 –º—Å - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è
‚Ä¢ <20 –º—Å - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∞—è

<b>Stress Index</b>
‚Ä¢ <50 - —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ
‚Ä¢ 50-150 - –Ω–æ—Ä–º–∞
‚Ä¢ 150-400 - –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ
‚Ä¢ >400 - –ø–µ—Ä–µ–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ

<b>LF/HF ratio</b> - –ë–∞–ª–∞–Ω—Å –°–ù–°/–ü–ù–°
‚Ä¢ <0.5 - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
‚Ä¢ 0.5-2.0 - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
‚Ä¢ 2.0-4.0 - –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –¥–µ–π—Å—Ç–≤–∏—é
‚Ä¢ >4.0 - –ø–µ—Ä–µ–≤–æ–∑–±—É–∂–¥–µ–Ω–∏–µ

<i>–ü–æ–¥—Ä–æ–±–Ω–µ–µ: /metrics</i>
    """
    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("metrics"))
async def cmd_metrics(message: Message):
    """–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ HRV"""
    metrics_text = """
üî¨ <b>–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ HRV</b>

<b>1. –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>

<b>Mean RR</b> - —Å—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —É–¥–∞—Ä–∞–º–∏
‚Ä¢ –ù–æ—Ä–º–∞: 600-1200 –º—Å (50-100 —É–¥/–º–∏–Ω)
‚Ä¢ –û—Ç—Ä–∞–∂–∞–µ—Ç –±–∞–∑–æ–≤—ã–π —Ç–æ–Ω—É—Å –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

<b>SDNN</b> - –æ–±—â–∞—è –≤–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —á–∞—Å—Ç–æ—Ç–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –æ–±—â–µ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
‚Ä¢ –°–∏–ª—å–Ω–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞

<b>RMSSD</b> - –ø–∞—Ä–∞—Å–∏–º–ø–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
‚Ä¢ –í–∞–∂–µ–Ω –¥–ª—è –∑–∞–¥–∞—á —Å –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–µ–π
‚Ä¢ –°–Ω–∏–∂–∞–µ—Ç—Å—è —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º –Ω–∞ 1-2 –º—Å/10 –ª–µ—Ç

<b>pNN50</b> - –≥–∏–±–∫–æ—Å—Ç—å –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ % –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ —Å —Ä–∞–∑–ª–∏—á–∏–µ–º >50 –º—Å
‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
‚Ä¢ –†–µ–∑–∫–æ —Å–Ω–∏–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ 40 –ª–µ—Ç

<b>2. –ü—É–∞–Ω–∫–∞—Ä–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>

<b>SD1</b> - –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è –≤–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –ò–¥–µ–Ω—Ç–∏—á–µ–Ω RMSSD
‚Ä¢ –°–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—å –∏ —Å–∞–º–æ—Ä–µ–≥—É–ª—è—Ü–∏—è
‚Ä¢ 15-40 –º—Å - –Ω–æ—Ä–º–∞

<b>SD2</b> - –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –≤–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–º—É —Å—Ç—Ä–µ—Å—Å—É
‚Ä¢ 30-70 –º—Å - –Ω–æ—Ä–º–∞

<b>3. –ß–∞—Å—Ç–æ—Ç–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>

<b>LF power</b> (0.04-0.15 –ì—Ü)
‚Ä¢ –ë–∞—Ä–æ—Ä–µ—Ñ–ª–µ–∫—Å –∏ –º–µ–¥–ª–µ–Ω–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è
‚Ä¢ 200-800 ms¬≤ - –Ω–æ—Ä–º–∞

<b>HF power</b> (0.15-0.4 –ì—Ü)
‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å –¥—ã—Ö–∞–Ω–∏–µ–º
‚Ä¢ –ü–∞—Ä–∞—Å–∏–º–ø–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ 100-500 ms¬≤ - –Ω–æ—Ä–º–∞

<b>LF/HF ratio</b>
‚Ä¢ –ë–∞–ª–∞–Ω—Å —Å–∏–º–ø–∞—Ç–∏–∫–∏/–ø–∞—Ä–∞—Å–∏–º–ø–∞—Ç–∏–∫–∏
‚Ä¢ –ö–ª—é—á–µ–≤–æ–π –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è

<b>4. –ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>

<b>Stress Index</b>
‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏–º–ø–∞—Ç–∏–∫–∏
‚Ä¢ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Å—Ç—Ä–µ—Å—Å—É
‚Ä¢ >600 - —Ä–∏—Å–∫ —Å—Ä—ã–≤–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏

<b>Readiness Score</b>
‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
‚Ä¢ –£—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç

<b>Biological Age</b>
‚Ä¢ –û—Ü–µ–Ω–∫–∞ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
‚Ä¢ –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ SDNN –∏ RMSSD
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º –≤–æ–∑—Ä–∞—Å—Ç–æ–º

<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</i>
    """
    await message.answer(metrics_text, parse_mode="HTML")


@router.message(F.text == "üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å Polar H10")
async def cmd_connect_polar(message: Message):
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Polar H10"""
    db = getattr(message.bot, 'data', {}).get('db')
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        user = await db.get_user_by_telegram_id(message.from_user.id)
        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—É—é —Å—Å—ã–ª–∫—É
        web_app_url = settings.WEBAPP_URL
        if not web_app_url:
            await message.answer("‚ùå Web App –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
            return
        
        await message.answer(
            "üîó <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Polar H10</b>\n\n"
            "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –¥–∞—Ç—á–∏–∫—É –æ—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ:\n\n"
            f"<code>{web_app_url}</code>\n\n"
            "üì± <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b>\n"
            "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ\n"
            "2. –û—Ç–∫—Ä–æ–π—Ç–µ Google Chrome –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ\n"
            "3. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É\n"
            "4. –ù–∞–∂–º–∏—Ç–µ Enter\n\n"
            "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Chrome –∏–ª–∏ Edge –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Bluetooth",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É",
                    callback_data="copy_url"
                )],
                [InlineKeyboardButton(
                    text="üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ",
                    url=web_app_url
                )]
            ])
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Polar: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Polar H10.")

@router.message(F.text == "üìä –ú–æ–∏ –∑–∞–º–µ—Ä—ã")
async def show_sessions(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–º–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    db = getattr(message.bot, 'data', {}).get('db')
    
    try:
        sessions = await db.get_user_sessions(message.from_user.id, limit=10)
        
        if not sessions:
            await message.answer(
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–º–µ—Ä–æ–≤.\n–ù–∞–∂–º–∏—Ç–µ 'üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å Polar' –¥–ª—è –Ω–∞—á–∞–ª–∞.",
                reply_markup=get_main_keyboard()
            )
            return
        
        text = "üìä <b>–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–º–µ—Ä—ã:</b>\n\n"
        
        for idx, session in enumerate(sessions, 1):
            date_str = session.start_time.strftime("%d.%m.%Y %H:%M")
            duration_min = session.duration_seconds // 60 if session.duration_seconds else 0
            
            readiness = session.readiness_score or 0
            if readiness >= 80:
                emoji = "üü¢"
            elif readiness >= 65:
                emoji = "üü°"
            elif readiness >= 50:
                emoji = "üü†"
            else:
                emoji = "üî¥"
            
            text += f"{idx}. {date_str}\n"
            text += f"   {emoji} –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {readiness}%\n"
            text += f"   ‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_min} –º–∏–Ω\n"
            text += f"   ‚ù§Ô∏è –ß–°–°: {session.avg_hr:.0f} —É–¥/–º–∏–Ω\n"
            text += f"   üìà RMSSD: {session.avg_rmssd:.1f} –º—Å\n"
            
            if session.biological_age:
                text += f"   üß¨ –ë–∏–æ–ª. –≤–æ–∑—Ä–∞—Å—Ç: {session.biological_age} –ª–µ—Ç\n"
            
            text += f"   /detail_{session.session_id}\n\n"
        
        await message.answer(text, parse_mode="HTML")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–π: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(F.text == "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_statistics(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥"""
    await message.answer(
        "üìà <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:</b>",
        reply_markup=get_period_keyboard(),
        parse_mode="HTML"
    )


@router.callback_query(F.data == "copy_url")
async def copy_url(callback: CallbackQuery):
    """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ URL –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"""
    web_app_url = settings.WEBAPP_URL
    if web_app_url:
        await callback.answer(f"–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞: {web_app_url}", show_alert=True)
    else:
        await callback.answer("‚ùå URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω", show_alert=True)

@router.callback_query(F.data.startswith("period_"))
async def process_period(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    days = int(callback.data.split("_")[1])
    db = getattr(callback.bot, 'data', {}).get('db')
    
    try:
        await callback.message.edit_text("‚è≥ –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ...")
        
        # –ü–æ–ª—É—á–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞ –ø–µ—Ä–∏–æ–¥
        avg_data = await db.get_period_average(callback.from_user.id, days)
        
        if not avg_data:
            await callback.message.edit_text(
                f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days} –¥–Ω–µ–π –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.\n"
                "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–º–µ—Ä–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
            )
            return
        
        # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–µ—Å—Å–∏–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥
        sessions = await db.get_user_sessions(callback.from_user.id, limit=100)
        start_date = datetime.utcnow() - timedelta(days=days)
        period_sessions = [s for s in sessions if s.start_time >= start_date]
        
        period_name = {
            7: "–Ω–µ–¥–µ–ª—é",
            30: "–º–µ—Å—è—Ü", 
            90: "3 –º–µ—Å—è—Ü–∞",
            365: "–≥–æ–¥"
        }.get(days, f"{days} –¥–Ω–µ–π")
        
        text = f"üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period_name}</b>\n\n"
        text += f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ—Ä–æ–≤: {avg_data['count']}\n\n"
        
        text += "<b>–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>\n"
        text += f"‚ù§Ô∏è –ß–°–°: {avg_data['avg_hr']:.1f} —É–¥/–º–∏–Ω\n"
        text += f"üìà RMSSD: {avg_data['avg_rmssd']:.1f} –º—Å\n"
        text += f"üìä SDNN: {avg_data['avg_sdnn']:.1f} –º—Å\n"
        text += f"üéØ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {avg_data['avg_readiness']:.1f}%\n"
        text += f"üß¨ –ë–∏–æ–ª. –≤–æ–∑—Ä–∞—Å—Ç: {avg_data['avg_biological_age']:.0f} –ª–µ—Ç\n\n"
        
        # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
        readiness = avg_data['avg_readiness']
        if readiness >= 80:
            interpretation = "üü¢ –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ! –ì–æ—Ç–æ–≤—ã –∫ —Å–ª–æ–∂–Ω—ã–º –∑–∞–¥–∞—á–∞–º."
        elif readiness >= 65:
            interpretation = "üü° –•–æ—Ä–æ—à–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –°–ø—Ä–∞–≤–∏—Ç–µ—Å—å —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏."
        elif readiness >= 50:
            interpretation = "üü† –£–º–µ—Ä–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –ò–∑–±–µ–≥–∞–π—Ç–µ —Å—Ç—Ä–µ—Å—Å–∞."
        else:
            interpretation = "üî¥ –¢—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–¥—ã—Ö –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ."
        
        text += f"<i>{interpretation}</i>"
        
        await callback.message.edit_text(text, parse_mode="HTML")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–∏–æ–¥–∞: {e}")
        await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")


@router.callback_query(F.data.startswith("detail_"))
async def show_detail(callback: CallbackQuery):
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Å–µ—Å—Å–∏–∏"""
    session_id = callback.data.replace("detail_", "")
    db = getattr(callback.bot, 'data', {}).get('db')
    
    try:
        await callback.message.edit_text("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç...")
        
        # –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
        session = await db.get_session_data(session_id)
        if not session:
            await callback.message.edit_text("–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–æ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        datapoints = await db.get_session_datapoints(session.id)
        
        # –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        session_data = {
            'readiness_score': session.readiness_score,
            'avg_hr': session.avg_hr,
            'avg_sdnn': session.avg_sdnn,
            'avg_rmssd': session.avg_rmssd,
            'stress_index': session.stress_index,
            'biological_age': session.biological_age,
            'lf_hf_ratio': session.lf_hf_ratio
        }
        
        # –°–æ–∑–¥–∞—Ç—å –¥–∞—à–±–æ—Ä–¥
        visualizer = HRVVisualizer()
        chart_buffer = visualizer.create_dashboard(session_data, datapoints)
        
        # –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
        date_str = session.start_time.strftime("%d.%m.%Y %H:%M")
        duration_min = session.duration_seconds // 60 if session.duration_seconds else 0
        
        caption = f"""
üìä <b>–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç</b>

üìÖ –î–∞—Ç–∞: {date_str}
‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_min} –º–∏–Ω
üìç –¢–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö: {session.total_data_points}

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚ù§Ô∏è –°—Ä–µ–¥–Ω—è—è –ß–°–°: {session.avg_hr:.0f} —É–¥/–º–∏–Ω
üìà RMSSD: {session.avg_rmssd:.1f} –º—Å
üìä SDNN: {session.avg_sdnn:.1f} –º—Å
‚ö° –°—Ç—Ä–µ—Å—Å –∏–Ω–¥–µ–∫—Å: {session.stress_index:.0f}
üéØ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {session.readiness_score:.0f}%
üß¨ –ë–∏–æ–ª. –≤–æ–∑—Ä–∞—Å—Ç: {session.biological_age} –ª–µ—Ç

<b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
{get_recommendations(session_data)}
        """
        
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫
        photo = BufferedInputFile(chart_buffer.read(), filename="dashboard.png")
        await callback.message.answer_photo(
            photo=photo,
            caption=caption,
            parse_mode="HTML"
        )
        
        await callback.message.delete()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞.")


@router.callback_query(F.data.startswith("compare_"))
async def compare_sessions(callback: CallbackQuery):
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Å–µ—Å—Å–∏—è–º–∏"""
    session_id = callback.data.replace("compare_", "")
    db = getattr(callback.bot, 'data', {}).get('db')
    
    try:
        await callback.message.edit_text("‚è≥ –°—Ä–∞–≤–Ω–∏–≤–∞—é –¥–∞–Ω–Ω—ã–µ...")
        
        # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
        current_session = await db.get_session_data(session_id)
        if not current_session:
            await callback.message.edit_text("–°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–µ—Å—Å–∏–∏
        all_sessions = await db.get_user_sessions(callback.from_user.id, limit=10)
        
        # –ò—Å–∫–ª—é—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏ –≤–∑—è—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ
        previous_sessions = [
            s for s in all_sessions 
            if s.session_id != session_id and not s.is_active
        ]
        
        if len(previous_sessions) < 2:
            await callback.message.edit_text(
                "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.\n"
                "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–º–µ—Ä–æ–≤."
            )
            return
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        current_data = {
            'readiness_score': current_session.readiness_score,
            'avg_rmssd': current_session.avg_rmssd,
            'avg_sdnn': current_session.avg_sdnn,
            'stress_index': current_session.stress_index
        }
        
        previous_data = [
            {
                'readiness_score': s.readiness_score,
                'avg_rmssd': s.avg_rmssd,
                'avg_sdnn': s.avg_sdnn,
                'stress_index': s.stress_index
            }
            for s in previous_sessions[:5]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–µ—Å—Å–∏–π
        ]
        
        # –°–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        visualizer = HRVVisualizer()
        chart_buffer = visualizer.create_comparison_chart(current_data, previous_data)
        
        # –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        avg_readiness = sum(s['readiness_score'] for s in previous_data) / len(previous_data)
        change = current_data['readiness_score'] - avg_readiness
        
        if change > 5:
            trend = "üìà –£–ª—É—á—à–µ–Ω–∏–µ"
            emoji = "üü¢"
        elif change < -5:
            trend = "üìâ –°–Ω–∏–∂–µ–Ω–∏–µ"
            emoji = "üî¥"
        else:
            trend = "‚û°Ô∏è –°—Ç–∞–±–∏–ª—å–Ω–æ"
            emoji = "üü°"
        
        caption = f"""
üìä <b>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –∑–∞–º–µ—Ä–∞–º–∏</b>

{emoji} <b>{trend}</b>

–¢–µ–∫—É—â–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {current_data['readiness_score']:.0f}%
–°—Ä–µ–¥–Ω—è—è –∑–∞ –ø–µ—Ä–∏–æ–¥: {avg_readiness:.0f}%
–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {change:+.1f}%

<b>–î–µ—Ç–∞–ª–∏:</b>
‚Ä¢ RMSSD: {current_data['avg_rmssd']:.1f} –º—Å
‚Ä¢ SDNN: {current_data['avg_sdnn']:.1f} –º—Å
‚Ä¢ –°—Ç—Ä–µ—Å—Å: {current_data['stress_index']:.0f}

–ë–∞–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ {len(previous_data)} –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–º–µ—Ä–æ–≤.
        """
        
        photo = BufferedInputFile(chart_buffer.read(), filename="comparison.png")
        await callback.message.answer_photo(
            photo=photo,
            caption=caption,
            parse_mode="HTML"
        )
        
        await callback.message.delete()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π: {e}")
        await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.")


@router.message(F.web_app_data)
async def handle_webapp_data(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App"""
    db = getattr(message.bot, 'data', {}).get('db')
    
    try:
        data = json.loads(message.web_app_data.data)
        
        # –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await db.get_or_create_user(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name
        )
        
        session_id = data.get('sessionId')
        
        # –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
        if data.get('sessionComplete'):
            await handle_session_complete(message, db, user, data)
        else:
            # –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await handle_intermediate_data(message, db, user, data)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö Web App: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")


async def handle_session_complete(message: Message, db, user, data: dict):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏"""
    session_id = data.get('sessionId')
    
    try:
        # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ RR –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
        all_rr = data.get('allRRIntervals', [])
        
        if len(all_rr) < 30:
            await message.answer(
                "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n"
                "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–º–µ—Ä–∞: 2 –º–∏–Ω—É—Ç—ã."
            )
            return
        
        # –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–ø—Ä–æ—â–µ–Ω–Ω–æ - –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î)
        age = 35  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        
        # –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—Å–µ –º–µ—Ç—Ä–∏–∫–∏
        calculator = HRVCalculator()
        metrics = calculator.calculate_all_metrics(all_rr, age)
        
        # –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –≤ –¥–∞–Ω–Ω—ã–µ
        final_data = {**data, **metrics}
        
        # –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –≤ –ë–î
        session = await db.complete_session(session_id, final_data)
        
        if not session:
            await message.answer("‚ùå –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –°–æ–∑–¥–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç—á–µ—Ç
        duration_min = session.duration_seconds // 60
        
        # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        readiness = metrics.get('readiness_score', 50)
        if readiness >= 80:
            status = "üü¢ –û—Ç–ª–∏—á–Ω–æ!"
            recommendation = "–ì–æ—Ç–æ–≤—ã –∫ —Å–ª–æ–∂–Ω—ã–º –∑–∞–¥–∞—á–∞–º –∏ –ª–∏–¥–µ—Ä—Å—Ç–≤—É"
        elif readiness >= 65:
            status = "üü° –•–æ—Ä–æ—à–æ"
            recommendation = "–°–ø—Ä–∞–≤–∏—Ç–µ—Å—å —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏"
        elif readiness >= 50:
            status = "üü† –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ"
            recommendation = "–†–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏"
        else:
            status = "üî¥ –¢—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–¥—ã—Ö"
            recommendation = "–ò–∑–±–µ–≥–∞–π—Ç–µ —Å—Ç—Ä–µ—Å—Å–∞ –∏ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á"
        
        report = f"""
‚úÖ <b>–ó–∞–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!</b>

‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_min} –º–∏–Ω
üìç –°–æ–±—Ä–∞–Ω–æ —Ç–æ—á–µ–∫: {data.get('totalDataPoints', 0)}

<b>{status} –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {readiness}%</b>

<b>–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚ù§Ô∏è –ß–°–°: {metrics.get('hr', 0):.0f} —É–¥/–º–∏–Ω
üìà RMSSD: {metrics.get('rmssd', 0):.1f} –º—Å
üìä SDNN: {metrics.get('sdnn', 0):.1f} –º—Å
‚ö° –°—Ç—Ä–µ—Å—Å: {metrics.get('stress_index', 0):.0f}
‚öñÔ∏è LF/HF: {metrics.get('lf_hf_ratio', 0):.2f}
üß¨ –ë–∏–æ–ª. –≤–æ–∑—Ä–∞—Å—Ç: {metrics.get('biological_age', age)} –ª–µ—Ç

<b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b>
{recommendation}

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /detail_{session_id} –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        """
        
        await message.answer(
            report,
            parse_mode="HTML",
            reply_markup=get_session_keyboard(session_id)
        )
        
        logger.info(f"–°–µ—Å—Å–∏—è {session_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Å—Å–∏–∏.")


async def handle_intermediate_data(message: Message, db, user, data: dict):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    session_id = data.get('sessionId')
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å–æ–∑–¥–∞–Ω–∞ –ª–∏ —Å–µ—Å—Å–∏—è
        existing_session = await db.get_session_data(session_id)
        
        if not existing_session:
            # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
            session = await db.create_session(
                user_id=user.id,
                session_id=session_id,
                device_name="Polar H10"
            )
            await message.answer(
                f"üîó <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–æ!</b>\n\n"
                f"ID —Å–µ—Å—Å–∏–∏: <code>{session_id}</code>\n"
                f"–ù–∞—á–∞—Ç —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö HRV...",
                parse_mode="HTML"
            )
        
        # –î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É –¥–∞–Ω–Ω—ã—Ö
        await db.add_datapoint(session_id, data)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")


def get_recommendations(session_data: dict) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç—Ä–∏–∫"""
    recommendations = []
    
    readiness = session_data.get('readiness_score', 50)
    rmssd = session_data.get('avg_rmssd', 20)
    stress = session_data.get('stress_index', 150)
    
    if readiness >= 80:
        recommendations.append("‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á")
    elif readiness < 50:
        recommendations.append("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–¥—ã—Ö –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ")
    
    if rmssd < 19:
        recommendations.append("üßò –ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–∞")
    
    if stress > 400:
        recommendations.append("‚ö° –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ - –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø–µ—Ä–µ—Ä—ã–≤")
    elif stress > 150:
        recommendations.append("üòå –£–º–µ—Ä–µ–Ω–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ - –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É")
    
    if not recommendations:
        recommendations.append("‚úÖ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã")
    
    return "\n".join(f"‚Ä¢ {r}" for r in recommendations)


@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def show_settings(message: Message):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)"""
    settings_text = """
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>

üîú –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
‚Ä¢ –í—ã–±–æ—Ä –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏

–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 1 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ Polar H10.
    """
    await message.answer(settings_text, parse_mode="HTML")

